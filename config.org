* personal settings

#+begin_src emacs-lisp
;; -*- lexical-binding: t; -*-

(setq my-notes-directory "~/Dropbox/org/reading-notes"
      my-bibliography "~/Dropbox/texmf/bibtex/bib/misc/rvf.bib"
      my-library-path "~/Documents/References/")
#+end_src

* emacs general settings

#+begin_src emacs-lisp
(use-package emacs
  :config
  (ido-mode 1)
  :custom
  (confirm-nonexistent-file-or-buffer nil)
  (custom-file (concat user-emacs-directory "custom.el"))
  (frame-title-format "%b: %+%+ %f")
  (mouse-drag-copy-region t)
  :init
  (global-visual-line-mode))
#+end_src

* use-package

#+begin_src emacs-lisp
(straight-use-package 'use-package)
#+end_src

* Packages

** corfu

https://github.com/minad/corfu

#+begin_quote
corfu.el - COmpletion in Region FUnction
#+end_quote

#+begin_src emacs-lisp
(use-package corfu
  :straight t
  :custom
  (corfu-auto t)
  :init
  (global-corfu-mode))
#+end_src

*** cape

By default, =corfu= works only on =.el= files. For it to be able to complete, say, by the words in a dictionary or words in the buffer, it needs /extensions/ given by =cape=.

https://github.com/minad/cape

#+begin_quote
cape.el - Completion At Point Extensions
#+end_quote

#+begin_src emacs-lisp
(use-package cape
  :straight t
  :init
  (add-to-list 'completion-at-point-functions #'cape-dabbrev)
  (add-to-list 'completion-at-point-functions #'cape-dict))
#+end_src

Note that in order to use a non-English dictionary, it is useful a local variable like =cape-dict-file: "/usr/share/dict/spanish"=.

** magit

https://magit.vc

#+begin_quote
Magit is a complete text-based user interface to Git.
#+end_quote

#+begin_src emacs-lisp
(use-package magit
  :straight t
  :bind ("C-c m" . magit-status))
#+end_src

** mixed-pitch

https://gitlab.com/jabranham/mixed-pitch

#+begin_src quote
Mix fixed-pitch and variable-pitch fonts in Emacs
#+end_src

#+begin_src emacs-lisp
(use-package mixed-pitch
  :straight t
  :hook
  (text-mode . mixed-pitch-mode))
#+end_src

** org

- I am setting =org-src-preserve-indentation= to =t= since otherwise source blocks are changed (indented) after edited.

#+begin_src emacs-lisp
(use-package org
  :custom
  (org-src-preserve-indentation t))
#+end_src

** org-fragtog

https://github.com/io12/org-fragtog

#+begin_quote
Automatically toggle Org mode LaTeX fragment previews as the cursor enters and exits them
#+end_quote

For some reason, by default the previews are too small, so we have to increase the scale.

#+begin_src emacs-lisp
(use-package org-fragtog
  :straight t
  :after org
  :custom
  (org-format-latex-options (plist-put org-format-latex-options :scale 2.1))
  :init
  (add-hook 'org-mode-hook 'org-fragtog-mode))
#+end_src

** org-noter

By default =C-M-.= is bound to =org-noter-sync-current-note=.

https://github.com/org-noter/org-noter

#+begin_src emacs-lisp
(use-package org-noter
  :straight
  (:repo "org-noter/org-noter"
         :host github
         :type git
         :files ("*.el" "modules/*.el"))
  :after (org nov pdf-tools)
  :bind (("<f5> n" . org-noter))
  :custom
  (org-noter-auto-save-last-location t)
  (org-noter-notes-search-path '(my-notes-directory)))
#+end_src

** nov

https://depp.brause.cc/nov.el/

Useful to open =epub= files and for org-noter to annotate files in =epub= format. In fact, =doc-view=, which is already included, can open files in =djvu= and =epub=. But, it converts every page of an =epub= file to an image, while =nov= can be used to access the text. We have to tell Emacs to open =epubs= in this mode, otherwise it will use =doc-view=.

#+begin_src emacs-lisp
(use-package nov
  :straight t
  :mode ("\\.epub\\'" . nov-mode))
#+end_src

** pdf-tools

https://github.com/vedang/pdf-tools

#+begin_quote
PDF Tools is, among other things, a replacement of DocView for PDF files. The key difference is that pages are not pre-rendered by e.g. ghostscript and stored in the file-system, but rather created on-demand and stored in memory.
#+end_quote

#+begin_src emacs-lisp
(use-package pdf-tools
  :if window-system
  :straight t
  :config
  (pdf-tools-install))
#+end_src



